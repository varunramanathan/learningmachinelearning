Tom Michell (1998) Well-Posed Learning Problem: A computer program is said to "learn" from experience E with respect to some task T and some performance measure P, if its performance on T, as measured by P, improves with experience E. 
Example: playing checkers.

E = the experience of playing many games of checkers

T = the task of playing checkers.

P = the probability that the program will win the next game.

Machine learning algorithms can be classified broadly into:
	1. Supervised Learning (teach the computer how to do something)
	2. Unsupervised learning (let the computer learn itself)
	Others: Reinforcement learning, recommender systems, etc.

Important: How to apply machine learning algorithms. Best practices for applying machine learning algorithms. After learning the tools of machine learning, it is also important to learn how to use those tools properly in a given context. This is something that we will focus a lot on in this course.

Supervised Learning
We give our program a data set with values of the independent variable and the right answers for the dependent variable(s). Our algorithm tries to produce right answers for variable values outside the data set.
Regression problem: Predict continuous valued output
Classification problem: Predict discrete valued output

You can use "features" (independent variables) to predict output with some probability.
But you can also have an infinite number of features; how do we deal with it? There is an algorithm called "Support Vector Machines" which allows the program to deal with an infinite number of features.  

Unsupervised Learning
You have a dataset, but now you know nothing about how any value in the dataset maps to a number/output. Earlier we knew the kinds of tumours are benign tumours and the kind that are malignant. But now we only have the data, but no information as to whether a data point corresponds to "benign" class or "malignant" class.
Given a dataset; can you find some structure in the dataset?

Clustering algorithm: Breaks down your dataset into "clusters" of data. We are trying to find some implicit structure.

Cocktail-party problem algorithm

Coursera notes:
	Unsupervised Learning

	Unsupervised learning allows us to approach problems with little or no idea what our results should look like. We can derive structure from data where we don't necessarily know the effect of the variables.

	We can derive this structure by clustering the data based on relationships among the variables in the data.

	With unsupervised learning there is no feedback based on the prediction results.

	Example:

	Clustering: Take a collection of 1,000,000 different genes, and find a way to automatically group these genes into groups that are somehow similar or related by different variables, such as lifespan, location, roles, and so on.

	Non-clustering: The "Cocktail Party Algorithm", allows you to find structure in a chaotic environment. (i.e. identifying individual voices and music from a mesh of sounds at a cocktail party).

